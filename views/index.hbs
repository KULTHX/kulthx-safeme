<!DOCTYPE html>
<html lang="ar" dir="rtl">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>KULTHX SAFEME v2 - حماية نصوص Roblox</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <script src="/socket.io/socket.io.js"></script>
  <link href="https://fonts.googleapis.com/css2?family=Noto+Sans+Arabic:wght@300;400;500;600;700;800&family=Fira+Code:wght@400;500;600&family=Inter:wght@300;400;500;600;700;800&display=swap" rel="stylesheet">
  <style>
    :root {
      --primary-gradient: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      --secondary-gradient: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);
      --success-gradient: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);
      --danger-gradient: linear-gradient(135deg, #fa709a 0%, #fee140 100%);
      --dark-gradient: linear-gradient(135deg, #0c0c0c 0%, #1a1a2e 50%, #16213e 100%);
      --card-gradient: linear-gradient(135deg, rgba(255,255,255,0.1) 0%, rgba(255,255,255,0.05) 100%);
      --glass-effect: rgba(255, 255, 255, 0.1);
      --text-primary: #ffffff;
      --text-secondary: #b0b0b0;
      --border-color: rgba(255, 255, 255, 0.2);
    }

    * {
      box-sizing: border-box;
    }

    body {
      background: var(--dark-gradient);
      font-family: "Noto Sans Arabic", "Inter", sans-serif;
      color: var(--text-primary);
      margin: 0;
      padding: 0;
      overflow-x: hidden;
      min-height: 100vh;
    }

    /* Animated Background */
    body::before {
      content: '';
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: 
        radial-gradient(circle at 20% 80%, rgba(120, 119, 198, 0.3) 0%, transparent 50%),
        radial-gradient(circle at 80% 20%, rgba(255, 119, 198, 0.3) 0%, transparent 50%),
        radial-gradient(circle at 40% 40%, rgba(120, 219, 255, 0.2) 0%, transparent 50%);
      z-index: -1;
      animation: backgroundMove 20s ease-in-out infinite;
    }

    @keyframes backgroundMove {
      0%, 100% { transform: translateX(0) translateY(0); }
      25% { transform: translateX(-20px) translateY(-10px); }
      50% { transform: translateX(20px) translateY(10px); }
      75% { transform: translateX(-10px) translateY(20px); }
    }

    /* Glass Morphism Effect */
    .glass-card {
      background: var(--card-gradient);
      backdrop-filter: blur(20px);
      border: 1px solid var(--border-color);
      border-radius: 20px;
      box-shadow: 
        0 8px 32px rgba(0, 0, 0, 0.3),
        inset 0 1px 0 rgba(255, 255, 255, 0.2);
      transition: all 0.3s ease;
    }

    .glass-card:hover {
      transform: translateY(-5px);
      box-shadow: 
        0 20px 40px rgba(0, 0, 0, 0.4),
        inset 0 1px 0 rgba(255, 255, 255, 0.3);
    }

    /* Modern Header */
    .modern-header {
      background: rgba(0, 0, 0, 0.2);
      backdrop-filter: blur(20px);
      border-bottom: 1px solid var(--border-color);
      position: fixed;
      top: 0;
      left: 0;
      right: 0;
      z-index: 1000;
      height: 70px;
    }

    /* Professional Navigation */
    .nav-container {
      display: flex;
      align-items: center;
      justify-content: space-between;
      padding: 0 2rem;
      height: 100%;
      max-width: 1200px;
      margin: 0 auto;
    }

    .logo-section {
      display: flex;
      align-items: center;
      gap: 1rem;
    }

    .logo-icon {
      width: 40px;
      height: 40px;
      background: var(--primary-gradient);
      border-radius: 12px;
      display: flex;
      align-items: center;
      justify-content: center;
      font-size: 1.5rem;
      animation: logoGlow 2s ease-in-out infinite alternate;
    }

    @keyframes logoGlow {
      0% { box-shadow: 0 0 20px rgba(102, 126, 234, 0.5); }
      100% { box-shadow: 0 0 30px rgba(102, 126, 234, 0.8); }
    }

    .logo-text {
      font-size: 1.5rem;
      font-weight: 800;
      background: var(--primary-gradient);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      background-clip: text;
    }

    /* Modern Navigation Menu */
    .nav-menu {
      display: flex;
      gap: 0.5rem;
      align-items: center;
    }

    .nav-item {
      padding: 0.75rem 1.5rem;
      border-radius: 12px;
      color: var(--text-secondary);
      text-decoration: none;
      font-weight: 500;
      transition: all 0.3s ease;
      position: relative;
      overflow: hidden;
    }

    .nav-item::before {
      content: '';
      position: absolute;
      top: 0;
      left: -100%;
      width: 100%;
      height: 100%;
      background: var(--primary-gradient);
      transition: left 0.3s ease;
      z-index: -1;
    }

    .nav-item:hover::before,
    .nav-item.active::before {
      left: 0;
    }

    .nav-item:hover,
    .nav-item.active {
      color: white;
      transform: translateY(-2px);
    }

    /* Mobile Menu Button */
    .mobile-menu-btn {
      display: none;
      background: var(--primary-gradient);
      border: none;
      border-radius: 12px;
      width: 45px;
      height: 45px;
      align-items: center;
      justify-content: center;
      cursor: pointer;
      transition: all 0.3s ease;
    }

    .mobile-menu-btn:hover {
      transform: scale(1.1);
    }

    /* Loading Bar */
    .loading-container {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: rgba(0, 0, 0, 0.8);
      backdrop-filter: blur(10px);
      display: none;
      align-items: center;
      justify-content: center;
      z-index: 2000;
    }

    .loading-content {
      text-align: center;
    }

    .loading-square {
      width: 60px;
      height: 60px;
      background: var(--primary-gradient);
      border-radius: 12px;
      margin: 0 auto 1rem;
      animation: loadingAnimation 2s ease-in-out infinite;
      position: relative;
      overflow: hidden;
    }

    .loading-square::before {
      content: '';
      position: absolute;
      top: 0;
      left: -100%;
      width: 100%;
      height: 100%;
      background: linear-gradient(90deg, transparent, rgba(255,255,255,0.4), transparent);
      animation: shimmer 1.5s ease-in-out infinite;
    }

    @keyframes loadingAnimation {
      0% { 
        transform: rotate(0deg) scale(1);
        border-radius: 12px;
      }
      25% { 
        transform: rotate(90deg) scale(1.1);
        border-radius: 50%;
      }
      50% { 
        transform: rotate(180deg) scale(1);
        border-radius: 12px;
      }
      75% { 
        transform: rotate(270deg) scale(1.1);
        border-radius: 50%;
      }
      100% { 
        transform: rotate(360deg) scale(1);
        border-radius: 12px;
      }
    }

    @keyframes shimmer {
      0% { left: -100%; }
      100% { left: 100%; }
    }

    .loading-text {
      font-size: 1.2rem;
      font-weight: 600;
      color: var(--text-primary);
      margin-bottom: 0.5rem;
    }

    .loading-subtext {
      font-size: 0.9rem;
      color: var(--text-secondary);
    }

    /* Modern Buttons */
    .btn-primary {
      background: var(--primary-gradient);
      color: white;
      border: none;
      border-radius: 12px;
      padding: 1rem 2rem;
      font-weight: 600;
      font-size: 1rem;
      cursor: pointer;
      transition: all 0.3s ease;
      position: relative;
      overflow: hidden;
    }

    .btn-primary::before {
      content: '';
      position: absolute;
      top: 0;
      left: -100%;
      width: 100%;
      height: 100%;
      background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);
      transition: left 0.5s ease;
    }

    .btn-primary:hover::before {
      left: 100%;
    }

    .btn-primary:hover {
      transform: translateY(-3px);
      box-shadow: 0 10px 25px rgba(102, 126, 234, 0.4);
    }

    .btn-secondary {
      background: rgba(255, 255, 255, 0.1);
      color: var(--text-primary);
      border: 1px solid var(--border-color);
      border-radius: 12px;
      padding: 0.75rem 1.5rem;
      font-weight: 500;
      cursor: pointer;
      transition: all 0.3s ease;
    }

    .btn-secondary:hover {
      background: rgba(255, 255, 255, 0.2);
      transform: translateY(-2px);
    }

    .btn-danger {
      background: var(--danger-gradient);
      color: white;
      border: none;
      border-radius: 12px;
      padding: 0.75rem 1.5rem;
      font-weight: 500;
      cursor: pointer;
      transition: all 0.3s ease;
    }

    .btn-danger:hover {
      transform: translateY(-2px);
      box-shadow: 0 8px 20px rgba(250, 112, 154, 0.4);
    }

    /* Modern Input */
    .modern-input {
      background: rgba(255, 255, 255, 0.1);
      border: 1px solid var(--border-color);
      border-radius: 12px;
      color: var(--text-primary);
      padding: 1rem;
      font-family: "Fira Code", monospace;
      font-size: 1rem;
      width: 100%;
      transition: all 0.3s ease;
    }

    .modern-input:focus {
      outline: none;
      border-color: #667eea;
      box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.3);
      background: rgba(255, 255, 255, 0.15);
    }

    .modern-textarea {
      background: rgba(255, 255, 255, 0.1);
      border: 1px solid var(--border-color);
      border-radius: 12px;
      color: var(--text-primary);
      padding: 1rem;
      font-family: "Fira Code", monospace;
      font-size: 1rem;
      width: 100%;
      resize: vertical;
      min-height: 200px;
      transition: all 0.3s ease;
    }

    .modern-textarea:focus {
      outline: none;
      border-color: #667eea;
      box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.3);
      background: rgba(255, 255, 255, 0.15);
    }

    /* Toast Notifications */
    .toast {
      position: fixed;
      top: 90px;
      right: 20px;
      z-index: 1500;
      padding: 1rem 1.5rem;
      border-radius: 12px;
      color: white;
      font-weight: 500;
      opacity: 0;
      transform: translateX(100px);
      transition: all 0.3s ease;
      box-shadow: 0 8px 25px rgba(0, 0, 0, 0.3);
      backdrop-filter: blur(10px);
    }

    .toast.show {
      opacity: 1;
      transform: translateX(0);
    }

    .toast.success {
      background: var(--success-gradient);
    }

    .toast.error {
      background: var(--danger-gradient);
    }

    /* Modal */
    .modal {
      position: fixed;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background: rgba(0, 0, 0, 0.8);
      backdrop-filter: blur(10px);
      display: flex;
      align-items: center;
      justify-content: center;
      z-index: 1500;
      opacity: 0;
      visibility: hidden;
      transition: all 0.3s ease;
    }

    .modal.show {
      opacity: 1;
      visibility: visible;
    }

    .modal-content {
      background: var(--card-gradient);
      backdrop-filter: blur(20px);
      border: 1px solid var(--border-color);
      border-radius: 20px;
      padding: 2rem;
      max-width: 600px;
      width: 90%;
      max-height: 80vh;
      overflow-y: auto;
      box-shadow: 0 20px 40px rgba(0, 0, 0, 0.4);
    }

    /* Page Sections */
    .page-section {
      display: none;
      padding-top: 90px;
      min-height: 100vh;
    }

    .page-section.active {
      display: block;
    }

    /* Hero Section */
    .hero-section {
      text-align: center;
      padding: 4rem 2rem;
      max-width: 1200px;
      margin: 0 auto;
    }

    .hero-title {
      font-size: 3.5rem;
      font-weight: 800;
      background: var(--primary-gradient);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      background-clip: text;
      margin-bottom: 1rem;
      line-height: 1.2;
    }

    .hero-subtitle {
      font-size: 1.3rem;
      color: var(--text-secondary);
      margin-bottom: 3rem;
      max-width: 600px;
      margin-left: auto;
      margin-right: auto;
      line-height: 1.6;
    }

    /* Feature Cards */
    .feature-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
      gap: 2rem;
      margin: 4rem 0;
    }

    .feature-card {
      text-align: center;
      padding: 2rem;
    }

    .feature-icon {
      width: 80px;
      height: 80px;
      background: var(--primary-gradient);
      border-radius: 20px;
      display: flex;
      align-items: center;
      justify-content: center;
      font-size: 2rem;
      margin: 0 auto 1.5rem;
      animation: featureFloat 3s ease-in-out infinite;
    }

    @keyframes featureFloat {
      0%, 100% { transform: translateY(0); }
      50% { transform: translateY(-10px); }
    }

    .feature-title {
      font-size: 1.3rem;
      font-weight: 700;
      margin-bottom: 1rem;
      color: var(--text-primary);
    }

    .feature-description {
      color: var(--text-secondary);
      line-height: 1.6;
    }

    /* Responsive Design */
    @media (max-width: 768px) {
      .nav-menu {
        display: none;
      }
      
      .mobile-menu-btn {
        display: flex;
      }
      
      .hero-title {
        font-size: 2.5rem;
      }
      
      .hero-subtitle {
        font-size: 1.1rem;
      }
      
      .nav-container {
        padding: 0 1rem;
      }
    }

    @media (max-width: 480px) {
      .hero-section {
        padding: 2rem 1rem;
      }
      
      .hero-title {
        font-size: 2rem;
      }
    }

    /* Scrollbar Styling */
    ::-webkit-scrollbar {
      width: 8px;
    }

    ::-webkit-scrollbar-track {
      background: rgba(255, 255, 255, 0.1);
    }

    ::-webkit-scrollbar-thumb {
      background: var(--primary-gradient);
      border-radius: 4px;
    }

    ::-webkit-scrollbar-thumb:hover {
      background: var(--secondary-gradient);
    }
  </style>
</head>
<body>
  <!-- Loading Screen -->
  <div id="loadingContainer" class="loading-container">
    <div class="loading-content">
      <div class="loading-square"></div>
      <div class="loading-text">جاري حماية النص...</div>
      <div class="loading-subtext">يرجى الانتظار قليلاً</div>
    </div>
  </div>

  <!-- Toast Notification -->
  <div id="toast" class="toast">
    <span id="toastMessage"></span>
  </div>

  <!-- Edit Modal -->
  <div id="editModal" class="modal">
    <div class="modal-content">
      <h3 class="text-xl font-semibold mb-4">تعديل النص</h3>
      <textarea 
        id="editScriptInput" 
        class="modern-textarea mb-4"
        placeholder="أدخل النص المحدث هنا..."
      ></textarea>
      <div class="flex justify-end gap-3">
        <button id="cancelEdit" class="btn-secondary">إلغاء</button>
        <button id="saveEdit" class="btn-primary">حفظ</button>
      </div>
    </div>
  </div>

  <!-- Modern Header -->
  <header class="modern-header">
    <div class="nav-container">
      <div class="logo-section">
        <div class="logo-icon">🛡️</div>
        <div class="logo-text">KULTHX SAFEME</div>
        <span style="font-size: 0.8rem; color: var(--text-secondary); margin-right: 0.5rem;">v2.0</span>
      </div>
      
      <nav class="nav-menu">
        <a href="#" class="nav-item active" data-page="home">الرئيسية</a>
        <a href="#" class="nav-item" data-page="scripts">نصوصي</a>
        <a href="#" class="nav-item" data-page="about">حول</a>
      </nav>
      
      <button id="mobileMenuBtn" class="mobile-menu-btn">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="white">
          <path d="M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z"/>
        </svg>
      </button>
    </div>
  </header>

  <!-- Main Content -->
  <main>
    
    <!-- Home Page -->
    <div id="homePage" class="page-section active">
      <div class="hero-section">
        <h1 class="hero-title">حماية نصوص Roblox</h1>
        <p class="hero-subtitle">منصة احترافية لتشفير ومشاركة نصوصك بأمان مع loadstring فريد لمنفذي Roblox</p>
        
        <div class="glass-card" style="max-width: 800px; margin: 0 auto; padding: 2rem;">
          <textarea 
            id="scriptInput" 
            class="modern-textarea"
            placeholder="الصق نص Roblox الخاص بك هنا..."
            style="margin-bottom: 1.5rem;"
          ></textarea>
          
          <button id="protectBtn" class="btn-primary" style="font-size: 1.1rem; padding: 1.2rem 2.5rem;">
            🚀 احم نصك الآن
          </button>
          
          <div id="result" class="mt-8 hidden">
            <div class="glass-card p-6">
              <p class="text-green-400 font-semibold text-lg mb-4">✅ تم إنشاء Loadstring بنجاح:</p>
              <div class="mb-4">
                <input 
                  id="scriptLink" 
                  type="text" 
                  readonly 
                  class="modern-input"
                  style="font-size: 0.9rem;"
                >
              </div>
              <button id="copyBtn" class="btn-secondary">
                📋 نسخ Loadstring
              </button>
            </div>
          </div>
        </div>
        
        <!-- Features Section -->
        <div class="feature-grid">
          <div class="glass-card feature-card">
            <div class="feature-icon">🔒</div>
            <h3 class="feature-title">تشفير قوي</h3>
            <p class="feature-description">حماية متقدمة لنصوصك مع تشفير عالي الجودة</p>
          </div>
          
          <div class="glass-card feature-card">
            <div class="feature-icon">⚡</div>
            <h3 class="feature-title">سرعة فائقة</h3>
            <p class="feature-description">معالجة سريعة وفورية لجميع النصوص</p>
          </div>
          
          <div class="glass-card feature-card">
            <div class="feature-icon">🎯</div>
            <h3 class="feature-title">سهولة الاستخدام</h3>
            <p class="feature-description">واجهة بسيطة وسهلة للجميع</p>
          </div>
        </div>
      </div>
    </div>

    <!-- Scripts Page -->
    <div id="scriptsPage" class="page-section">
      <div style="max-width: 1200px; margin: 0 auto; padding: 2rem;">
        <div class="text-center mb-8">
          <h2 class="text-3xl font-bold mb-2" style="background: var(--primary-gradient); -webkit-background-clip: text; -webkit-text-fill-color: transparent;">📜 نصوصي المحمية</h2>
          <p class="text-lg" style="color: var(--text-secondary);">إدارة وتعديل النصوص المحمية الخاصة بك</p>
        </div>

        <div id="scriptsList" class="space-y-4">
          <!-- Scripts will be loaded here -->
        </div>
      </div>
    </div>

    <!-- About Page -->
    <div id="aboutPage" class="page-section">
      <div style="max-width: 1200px; margin: 0 auto; padding: 2rem;">
        <div class="text-center mb-8">
          <h2 class="text-3xl font-bold mb-4" style="background: var(--primary-gradient); -webkit-background-clip: text; -webkit-text-fill-color: transparent;">ℹ️ حول KULTHX SAFEME v2</h2>
        </div>
        
        <div class="feature-grid">
          <div class="glass-card feature-card">
            <div class="feature-icon">🛡️</div>
            <h3 class="feature-title">ما هو KULTHX SAFEME؟</h3>
            <p class="feature-description">منصة مبتكرة لحماية نصوص Roblox، تقدم حلولاً آمنة لتحويل نصوصك إلى روابط مشفرة للاستخدام الآمن داخل اللعبة.</p>
          </div>
          
          <div class="glass-card feature-card">
            <div class="feature-icon">⚙️</div>
            <h3 class="feature-title">كيف يعمل</h3>
            <p class="feature-description">أدخل نصك، وسنقوم بتخزينه بأمان، مع إنشاء loadstring فريد للاستخدام في Roblox عبر HttpGet.</p>
          </div>
          
          <div class="glass-card feature-card">
            <div class="feature-icon">⭐</div>
            <h3 class="feature-title">لماذا تختارنا؟</h3>
            <div class="feature-description">
              <div style="text-align: right; margin-top: 1rem;">
                <div style="margin-bottom: 0.5rem;">✓ تشفير قوي لحماية نصوصك</div>
                <div style="margin-bottom: 0.5rem;">✓ واجهة حديثة وسهلة الاستخدام</div>
                <div style="margin-bottom: 0.5rem;">✓ loadstring فريد وآمن لكل نص</div>
                <div>✓ تحديثات ودعم مستمر</div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>

  </main>

  <!-- Footer -->
  <footer style="background: rgba(0, 0, 0, 0.2); backdrop-filter: blur(20px); border-top: 1px solid var(--border-color); margin-top: 4rem;">
    <div style="max-width: 1200px; margin: 0 auto; padding: 2rem; text-align: center;">
      <h3 class="text-lg font-semibold mb-2" style="background: var(--primary-gradient); -webkit-background-clip: text; -webkit-text-fill-color: transparent;">KULTHX SAFEME v2</h3>
      <p style="color: var(--text-secondary); font-size: 0.9rem;">© 2025 جميع الحقوق محفوظة ✨</p>
      <p style="color: var(--text-secondary); font-size: 0.8rem; margin-top: 0.5rem;">منصة آمنة وموثوقة لحماية نصوص Roblox</p>
    </div>
  </footer>

  <script>
    // Generate or retrieve user ID
    let userId = localStorage.getItem("userId");
    if (!userId) {
      userId = crypto.randomUUID();
      localStorage.setItem("userId", userId);
    }

    // Socket.IO connection
    const socket = io();

    // Page navigation
    let currentPage = 'home';
    
    function showPage(pageId) {
      document.querySelectorAll('.page-section').forEach(page => {
        page.classList.remove('active');
      });
      
      document.getElementById(pageId + 'Page').classList.add('active');
      
      document.querySelectorAll('.nav-item').forEach(item => {
        item.classList.remove('active');
      });
      document.querySelector(`[data-page="${pageId}"]`).classList.add('active');
      
      currentPage = pageId;
      
      if (pageId === 'scripts') {
        loadScripts();
      }
    }

    document.querySelectorAll('.nav-item').forEach(item => {
      item.addEventListener('click', (e) => {
        e.preventDefault();
        const pageId = item.dataset.page;
        showPage(pageId);
      });
    });

    // Loading functions
    function showLoading() {
      document.getElementById('loadingContainer').style.display = 'flex';
    }

    function hideLoading() {
      document.getElementById('loadingContainer').style.display = 'none';
    }

    function showToast(message, type = "success") {
      const toast = document.getElementById("toast");
      const toastMessage = document.getElementById("toastMessage");
      
      toastMessage.textContent = message;
      toast.className = `toast ${type}`;
      toast.classList.add("show");
      
      setTimeout(() => {
        toast.classList.remove("show");
      }, 4000);
    }

    // Protect script functionality
    document.getElementById("protectBtn").addEventListener("click", async () => {
      const script = document.getElementById("scriptInput").value;
      if (!script.trim()) {
        showToast("يرجى إدخال نص أولاً!", "error");
        return;
      }

      showLoading();

      try {
        const response = await fetch("/generate", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ script, userId })
        });
        
        const data = await response.json();
        
        hideLoading();
        
        if (data.error) {
          showToast(data.error, "error");
          if (data.loadstring) {
            const resultDiv = document.getElementById("result");
            const scriptLink = document.getElementById("scriptLink");
            scriptLink.value = data.loadstring;
            resultDiv.classList.remove("hidden");
          }
          return;
        }

        const resultDiv = document.getElementById("result");
        const scriptLink = document.getElementById("scriptLink");
        scriptLink.value = data.loadstring;
        resultDiv.classList.remove("hidden");
        showToast("تم حماية النص بنجاح!");
      } catch (err) {
        hideLoading();
        showToast("حدث خطأ في إنشاء loadstring!", "error");
      }
    });

    // Copy functionality
    document.getElementById("copyBtn").addEventListener("click", async () => {
      const scriptLink = document.getElementById("scriptLink");
      
      try {
        await navigator.clipboard.writeText(scriptLink.value);
        showToast("تم نسخ Loadstring بنجاح!");
      } catch (err) {
        scriptLink.select();
        document.execCommand("copy");
        showToast("تم نسخ Loadstring بنجاح!");
      } 
    });

    // Load scripts functionality
    async function loadScripts() {
      try {
        const response = await fetch("/my-scripts", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ userId })
        });
        
        const scripts = await response.json();
        
        if (scripts.error) {
          showToast(scripts.error, "error");
          return;
        }

        const scriptsList = document.getElementById("scriptsList");
        scriptsList.innerHTML = "";
        
        if (scripts.length === 0) {
          scriptsList.innerHTML = `
            <div class="glass-card p-6 text-center">
              <p style="color: var(--text-secondary);">لا توجد نصوص محمية. احم نصك الأول من <span style="color: #667eea; cursor: pointer; text-decoration: underline;" onclick="showPage('home')">الصفحة الرئيسية</span>.</p>
            </div>
          `;
          return;
        }

        scripts.forEach(script => {
          const scriptDiv = document.createElement("div");
          scriptDiv.className = "glass-card";
          scriptDiv.style.padding = "1.5rem";
          scriptDiv.innerHTML = `
            <div style="margin-bottom: 1rem;">
              <p style="font-weight: 600; color: var(--text-primary); font-size: 0.9rem; margin-bottom: 0.5rem;">Loadstring:</p>
              <input 
                type="text" 
                value="${script.loadstring.replace(/"/g, "&quot;")}" 
                readonly 
                class="modern-input"
                style="font-size: 0.8rem;"
              >
            </div>
            
            <div style="margin-bottom: 1rem;">
              <p style="color: var(--text-secondary); font-size: 0.8rem; margin-bottom: 0.5rem;">
                <span style="font-weight: 600;">تاريخ الإنشاء:</span> ${new Date(script.createdAt).toLocaleString()}
              </p>
              <textarea 
                rows="4" 
                class="modern-input" 
                readonly
                style="font-size: 0.8rem; resize: none;"
              >${script.script.replace(/</g, "&lt;").replace(/>/g, "&gt;")}</textarea>
            </div>
            
            <div style="display: flex; flex-wrap: wrap; gap: 0.5rem;">
              <button class="edit-btn btn-secondary" data-script-id="${script.id}" style="padding: 0.5rem 1rem; font-size: 0.8rem;">
                ✏️ تعديل
              </button>
              <button class="delete-btn btn-danger" data-script-id="${script.id}" style="padding: 0.5rem 1rem; font-size: 0.8rem;">
                🗑️ حذف
              </button>
              <button class="copy-btn btn-primary" data-loadstring="${script.loadstring.replace(/"/g, "&quot;")}" style="padding: 0.5rem 1rem; font-size: 0.8rem;">
                📋 نسخ Loadstring
              </button>
            </div>
          `;
          scriptsList.appendChild(scriptDiv);
        });

        // Add event listeners
        document.querySelectorAll(".edit-btn").forEach(button => {
          button.addEventListener("click", () => {
            const id = button.dataset.scriptId;
            const scriptContent = button.closest(".glass-card").querySelector("textarea").value;
            openEditModal(id, scriptContent);
          });
        });

        document.querySelectorAll(".delete-btn").forEach(button => {
          button.addEventListener("click", () => {
            const id = button.dataset.scriptId;
            deleteScript(id);
          });
        });

        document.querySelectorAll(".copy-btn").forEach(button => {
          button.addEventListener("click", () => {
            const loadstring = button.dataset.loadstring;
            copyLoadstring(loadstring);
          });
        });
      } catch (err) {
        console.error("Error loading scripts:", err);
        showToast("خطأ في تحميل النصوص!", "error");
      }
    }

    // Edit modal functionality
    let currentEditId = null;
    
    function openEditModal(id, script) {
      currentEditId = id;
      const modal = document.getElementById("editModal");
      const input = document.getElementById("editScriptInput");
      input.value = script;
      modal.classList.add("show");
    }

    document.getElementById("cancelEdit").addEventListener("click", () => {
      document.getElementById("editModal").classList.remove("show");
      currentEditId = null;
    });

    document.getElementById("saveEdit").addEventListener("click", async () => {
      const newScript = document.getElementById("editScriptInput").value;
      if (!newScript.trim()) {
        showToast("النص لا يمكن أن يكون فارغاً!", "error");
        return;
      }

      try {
        const response = await fetch(`/my-scripts/${currentEditId}`, {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ script: newScript, userId })
        });
        
        const data = await response.json();
        
        if (data.error) {
          showToast(data.error, "error");
          return;
        }
        
        showToast(data.message);
        document.getElementById("editModal").classList.remove("show");
        currentEditId = null;
        loadScripts();
      } catch (err) {
        console.error("Error updating script:", err);
        showToast("خطأ في تحديث النص!", "error");
      }
    });

    // Delete script functionality
    async function deleteScript(id) {
      if (!confirm("هل أنت متأكد من حذف هذا النص؟")) return;

      try {
        const response = await fetch(`/my-scripts/${id}`, {
          method: "DELETE",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ userId })
        });
        
        const data = await response.json();
        
        if (data.error) {
          showToast(data.error, "error");
          return;
        }
        
        showToast(data.message);
        loadScripts();
      } catch (err) {
        console.error("Error deleting script:", err);
        showToast("خطأ في حذف النص!", "error");
      }
    }

    // Copy loadstring functionality
    async function copyLoadstring(loadstring) {
      try {
        await navigator.clipboard.writeText(loadstring);
        showToast("تم نسخ Loadstring بنجاح!");
      } catch (err) {
        console.error("Error copying loadstring:", err);
        const tempInput = document.createElement("input");
        tempInput.value = loadstring;
        document.body.appendChild(tempInput);
        tempInput.select();
        try {
          document.execCommand("copy");
          showToast("تم نسخ Loadstring بنجاح!");
        } catch (e) {
          showToast("فشل في نسخ Loadstring!", "error");
        } finally {
          document.body.removeChild(tempInput);
        }
      }
    }

    // Modal click outside to close
    document.getElementById("editModal").addEventListener("click", (e) => {
      if (e.target === e.currentTarget) {
        document.getElementById("editModal").classList.remove("show");
        currentEditId = null;
      }
    });

    // Mobile menu functionality (placeholder for future implementation)
    document.getElementById("mobileMenuBtn").addEventListener("click", () => {
      // Mobile menu toggle functionality can be added here
      showToast("قائمة الجوال قيد التطوير", "error");
    });
  </script>
</body>
</html>

