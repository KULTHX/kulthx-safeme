<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>My Scripts - KULTHX SAFEME</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <script src="/socket.io/socket.io.js"></script>
  <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&display=swap" rel="stylesheet">
  <style>
    body {
      background-color: #0f0f0f;
      font-family: "Roboto", sans-serif;
      color: #ffffff;
      margin: 0;
      padding: 0;
    }

    .youtube-header {
      background-color: #212121;
      border-bottom: 1px solid #303030;
    }

    .youtube-sidebar {
      background-color: #212121;
      border-right: 1px solid #303030;
    }

    .youtube-card {
      background-color: #1a1a1a;
      border: 1px solid #303030;
      border-radius: 12px;
    }

    .youtube-card:hover {
      background-color: #262626;
    }

    .youtube-button {
      background-color: #cc0000;
      color: white;
      border: none;
      border-radius: 18px;
      font-weight: 500;
      transition: all 0.2s ease;
    }

    .youtube-button:hover {
      background-color: #aa0000;
    }

    .youtube-button-secondary {
      background-color: #3f3f3f;
      color: white;
      border: none;
      border-radius: 18px;
      font-weight: 500;
      transition: all 0.2s ease;
    }

    .youtube-button-secondary:hover {
      background-color: #4f4f4f;
    }

    .youtube-button-danger {
      background-color: #cc0000;
      color: white;
      border: none;
      border-radius: 18px;
      font-weight: 500;
      transition: all 0.2s ease;
    }

    .youtube-button-danger:hover {
      background-color: #aa0000;
    }

    .youtube-input {
      background-color: #121212;
      border: 1px solid #303030;
      color: #ffffff;
      border-radius: 2px;
    }

    .youtube-input:focus {
      outline: none;
      border-color: #4a4a4a; /* Changed from blue to a darker gray */
      box-shadow: 0 0 0 1px #4a4a4a; /* Changed from blue to a darker gray */
    }

    .youtube-text-secondary {
      color: #aaaaaa;
    }

    .youtube-text-primary {
      color: #ffffff;
    }

    .hamburger-btn {
      background: none;
      border: none;
      color: #ffffff;
      padding: 8px;
      border-radius: 50%;
      cursor: pointer;
      transition: background-color 0.2s ease;
    }

    .hamburger-btn:hover {
      background-color: #303030;
    }

    .sidebar-item {
      color: #ffffff;
      padding: 10px 24px;
      display: flex;
      align-items: center;
      text-decoration: none;
      border-radius: 10px;
      margin: 0 12px;
      transition: background-color 0.2s ease;
    }

    .sidebar-item:hover {
      background-color: #303030;
    }

    .sidebar-item.active {
      background-color: #303030;
    }

    .sidebar-item:focus-visible {
      outline: none; /* Ensure no outline on focus */
      box-shadow: none; /* Ensure no box-shadow on focus */
    }

    .toast {
      position: fixed;
      top: 20px;
      right: 20px;
      z-index: 1000;
      padding: 12px 16px;
      border-radius: 4px;
      color: white;
      font-weight: 500;
      opacity: 0;
      transform: translateY(-20px);
      transition: all 0.3s ease;
    }

    .toast.show {
      opacity: 1;
      transform: translateY(0);
    }

    .toast.success {
      background-color: #00d084;
    }

    .toast.error {
      background-color: #ff4444;
    }

    .modal {
      position: fixed;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background-color: rgba(0, 0, 0, 0.8);
      display: flex;
      align-items: center;
      justify-content: center;
      z-index: 1000;
      opacity: 0;
      visibility: hidden;
      transition: all 0.3s ease;
    }

    .modal.show {
      opacity: 1;
      visibility: visible;
    }

    .modal-content {
      background-color: #1a1a1a;
      border: 1px solid #303030;
      border-radius: 12px;
      padding: 24px;
      max-width: 600px;
      width: 90%;
      max-height: 80vh;
      overflow-y: auto;
    }

    @media (max-width: 768px) {
      .sidebar {
        transform: translateX(-100%);
      }
      .sidebar.open {
        transform: translateX(0);
      }
    }
  </style>
</head>
<body>
  <!-- Toast Notification -->
  <div id="toast" class="toast">
    <span id="toastMessage"></span>
  </div>

  <!-- Edit Modal -->
  <div id="editModal" class="modal">
    <div class="modal-content">
      <h3 class="text-xl font-medium youtube-text-primary mb-4">تعديل النص</h3>
      <textarea 
        id="editScriptInput" 
        rows="6" 
        class="youtube-input w-full p-3 text-sm resize-none mb-4"
        placeholder="أدخل النص المحدث هنا..."
      ></textarea>
      <div class="flex justify-end space-x-3">
        <button id="cancelEdit" class="youtube-button-secondary px-4 py-2 text-sm">إلغاء</button>
        <button id="saveEdit" class="youtube-button px-4 py-2 text-sm">حفظ</button>
      </div>
    </div>
  </div>

  <!-- Header -->
  <header class="youtube-header fixed top-0 left-0 right-0 z-50 h-14 flex items-center px-4">
    <button id="hamburgerBtn" class="hamburger-btn mr-4">
      <svg width="24" height="24" viewBox="0 0 24 24" fill="currentColor">
        <path d="M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z"/>
      </svg>
    </button>
    
    <div class="flex items-center flex-1">
      <h1 class="text-xl font-medium youtube-text-primary" style="border: none !important; outline: none !important; box-shadow: none !important;">KULTHX SAFEME</h1>
    </div>
  </header>

  <!-- Sidebar -->
  <nav id="sidebar" class="sidebar youtube-sidebar fixed left-0 top-14 bottom-0 w-60 z-40 transition-transform duration-300 overflow-y-auto">
    <div class="py-3">
      <a href="/real-home" class="sidebar-item">
        <span class="mr-6">🏠</span>
        <span>الرئيسية</span>
      </a>
      <a href="/my-scripts" class="sidebar-item active">
        <span class="mr-6">📜</span>
        <span>نصوصي</span>
      </a>
      <a href="/real-home#about" class="sidebar-item">
        <span class="mr-6">ℹ️</span>
        <span>حول</span>
      </a>
    </div>
  </nav>

  <!-- Main Content -->
  <main class="pt-14 transition-all duration-300" id="mainContent">
    <div class="max-w-6xl mx-auto p-4 md:p-6">
      <div class="mb-8">
        <h2 class="text-2xl md:text-3xl font-bold youtube-text-primary mb-2">📜 نصوصي المحمية</h2>
        <p class="youtube-text-secondary">إدارة وتعديل النصوص المحمية الخاصة بك</p>
      </div>

      <div id="scriptsList" class="space-y-4">
        <!-- Scripts will be loaded here -->
      </div>
    </div>
  </main>

  <!-- Footer -->
  <footer class="youtube-header border-t border-gray-700 mt-12">
    <div class="max-w-6xl mx-auto p-6 text-center">
      <h3 class="text-lg font-medium youtube-text-primary mb-2">KULTHX SAFEME</h3>
      <p class="youtube-text-secondary text-sm">© 2025 جميع الحقوق محفوظة ✨</p>
      <p class="youtube-text-secondary text-xs mt-2">منصة آمنة وموثوقة لحماية نصوص Roblox</p>
    </div>
  </footer>

  <script>
    // Generate or retrieve user ID
    let userId = localStorage.getItem("userId");
    if (!userId) {
      userId = crypto.randomUUID();
      localStorage.setItem("userId", userId);
    }

    // Socket.IO connection
    const socket = io();
    socket.on("onlineUsers", (count) => {
      // Online users count (not displayed)
    });

    // Sidebar toggle
    const hamburgerBtn = document.getElementById("hamburgerBtn");
    const sidebar = document.getElementById("sidebar");
    const mainContent = document.getElementById("mainContent");

    hamburgerBtn.addEventListener("click", () => {
      sidebar.classList.toggle("open");
      if (window.innerWidth > 768) {
        if (sidebar.classList.contains("open")) {
          mainContent.style.marginLeft = "240px";
        }
      } else {
        mainContent.style.marginLeft = "0";
      }
    });

    // Close sidebar on mobile when clicking outside
    document.addEventListener("click", (e) => {
      if (window.innerWidth <= 768 && 
          !sidebar.contains(e.target) && 
          !hamburgerBtn.contains(e.target) && 
          sidebar.classList.contains("open")) {
        sidebar.classList.remove("open");
      }
    });

    // Toast notification function
    function showToast(message, type = "success") {
      const toast = document.getElementById("toast");
      const toastMessage = document.getElementById("toastMessage");
      
      toastMessage.textContent = message;
      toast.className = `toast ${type}`;
      toast.classList.add("show");
      
      setTimeout(() => {
        toast.classList.remove("show");
      }, 3000);
    }

    // Load scripts
    async function loadScripts() {
      try {
        const response = await fetch("/my-scripts", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ userId })
        });
        
        const scripts = await response.json();
        
        if (scripts.error) {
          showToast(scripts.error, "error");
          return;
        }

        const scriptsList = document.getElementById("scriptsList");
        scriptsList.innerHTML = "";
        
        if (scripts.length === 0) {
          scriptsList.innerHTML = `
            <div class="youtube-card p-6 text-center">
              <p class="youtube-text-secondary">لا توجد نصوص محمية. احم نصك الأول من <a href="/real-home" class="text-red-500 hover:text-red-400 underline">الصفحة الرئيسية</a>.</p>
            </div>
          `;
          return;
        }

        scripts.forEach(script => {
          const scriptDiv = document.createElement("div");
          scriptDiv.className = "youtube-card p-4 md:p-6";
          scriptDiv.innerHTML = `
            <div class="mb-4">
              <p class="font-medium youtube-text-primary text-sm mb-2">Loadstring:</p>
              <input 
                type="text" 
                value="${script.loadstring.replace(/"/g, "&quot;")}" 
                readonly 
                class="youtube-input w-full p-2 text-xs font-mono"
              >
            </div>
            
            <div class="mb-4">
              <p class="youtube-text-secondary text-xs mb-2">
                <span class="font-medium">تاريخ الإنشاء:</span> ${new Date(script.createdAt).toLocaleString()}
              </p>
              <textarea 
                rows="4" 
                class="youtube-input w-full p-2 text-xs font-mono resize-none" 
                readonly
              >${script.script.replace(/</g, "&lt;").replace(/>/g, "&gt;")}</textarea>
            </div>
            
            <div class="flex flex-wrap gap-2">
              <button class="edit-btn youtube-button-secondary px-3 py-1.5 text-xs" data-script-id="${script.id}">
                ✏️ تعديل
              </button>
              <button class="delete-btn youtube-button-danger px-3 py-1.5 text-xs" data-script-id="${script.id}">
                🗑️ حذف
              </button>
              <button class="copy-btn youtube-button px-3 py-1.5 text-xs" data-loadstring="${script.loadstring.replace(/"/g, "&quot;")}">
                📋 نسخ Loadstring
              </button>
            </div>
          `;
          scriptsList.appendChild(scriptDiv);
        });

        // Add event listeners
        document.querySelectorAll(".edit-btn").forEach(button => {
          button.addEventListener("click", () => {
            const id = button.dataset.scriptId;
            const scriptContent = button.closest(".youtube-card").querySelector("textarea").value;
            openEditModal(id, scriptContent);
          });
        });

        document.querySelectorAll(".delete-btn").forEach(button => {
          button.addEventListener("click", () => {
            const id = button.dataset.scriptId;
            deleteScript(id);
          });
        });

        document.querySelectorAll(".copy-btn").forEach(button => {
          button.addEventListener("click", () => {
            const loadstring = button.dataset.loadstring;
            copyLoadstring(loadstring);
          });
        });
      } catch (err) {
        console.error("Error loading scripts:", err);
        showToast("خطأ في تحميل النصوص!", "error");
      }
    }

    // Edit modal handling
    let currentEditId = null;
    
    function openEditModal(id, script) {
      currentEditId = id;
      const modal = document.getElementById("editModal");
      const input = document.getElementById("editScriptInput");
      input.value = script;
      modal.classList.add("show");
    }

    document.getElementById("cancelEdit").addEventListener("click", () => {
      document.getElementById("editModal").classList.remove("show");
      currentEditId = null;
    });

    document.getElementById("saveEdit").addEventListener("click", async () => {
      const newScript = document.getElementById("editScriptInput").value;
      if (!newScript.trim()) {
        showToast("النص لا يمكن أن يكون فارغاً!", "error");
        return;
      }

      try {
        const response = await fetch(`/my-scripts/${currentEditId}`, {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ script: newScript, userId })
        });
        
        const data = await response.json();
        
        if (data.error) {
          showToast(data.error, "error");
          return;
        }
        
        showToast(data.message);
        document.getElementById("editModal").classList.remove("show");
        currentEditId = null;
        loadScripts();
      } catch (err) {
        console.error("Error updating script:", err);
        showToast("خطأ في تحديث النص!", "error");
      }
    });

    // Delete script
    async function deleteScript(id) {
      if (!confirm("هل أنت متأكد من حذف هذا النص؟")) return;

      try {
        const response = await fetch(`/my-scripts/${id}`, {
          method: "DELETE",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ userId })
        });
        
        const data = await response.json();
        
        if (data.error) {
          showToast(data.error, "error");
          return;
        }
        
        showToast(data.message);
        loadScripts();
      } catch (err) {
        console.error("Error deleting script:", err);
        showToast("خطأ في حذف النص!", "error");
      }
    }

    // Copy loadstring
    async function copyLoadstring(loadstring) {
      try {
        await navigator.clipboard.writeText(loadstring);
        showToast("تم نسخ Loadstring بنجاح!");
      } catch (err) {
        console.error("Error copying loadstring:", err);
        // Fallback for older browsers
        const tempInput = document.createElement("input");
        tempInput.value = loadstring;
        document.body.appendChild(tempInput);
        tempInput.select();
        try {
          document.execCommand("copy");
          showToast("تم نسخ Loadstring بنجاح!");
        } catch (e) {
          showToast("فشل في نسخ Loadstring!", "error");
        } finally {
          document.body.removeChild(tempInput);
        }
      }
    }

    // Close modal when clicking outside
    document.getElementById("editModal").addEventListener("click", (e) => {
      if (e.target === e.currentTarget) {
        document.getElementById("editModal").classList.remove("show");
        currentEditId = null;
      }
    });

    // Initialize sidebar state on desktop
    if (window.innerWidth > 768) {
      sidebar.classList.add("open");
      mainContent.style.marginLeft = "240px";
    }

    // Handle window resize
    window.addEventListener("resize", () => {
      if (window.innerWidth > 768) {
        if (sidebar.classList.contains("open")) {
          mainContent.style.marginLeft = "240px";
        }
      } else {
        mainContent.style.marginLeft = "0";
      }
    });

    // Load scripts on page load
    loadScripts();
  </script>
</body>
</html>





